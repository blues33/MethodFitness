version: "2"
services:
  frontend:
    depends_on:
      - api
    build:
      context: ../frontend
      dockerfile: docker/Dockerfile
    volumes:
      - ./../frontend/app:/home/current/app
    command: npm start #top -b #
    environment:
      APPLICATION_NAME: frontend
    ports:
      - "8080:8080"
    env_file:
      - ./../.envrc.example

  workflows:
    build:
      context: ../workflows
      dockerfile: docker/Dockerfile
    depends_on:
      - node
      - postgres
      - eventstore
    volumes:
      - ./../workflows/app:/home/current/app
    command: npm start #top -b #
    env_file:
      - ./../.envrc.example

  projections:
    build:
      context: ../projections
      dockerfile: docker/Dockerfile
    depends_on:
      - node
      - postgres
      - eventstore
    volumes:
      - ./../projections/app:/home/current/app
    command: npm start #top -b #
    env_file:
      - ./../.envrc.example

  api:
    build:
      context: ../api
      dockerfile: docker/Dockerfile
    volumes:
      - ./../api/app:/home/current/app
    command: npm run start #top -b #
    ports:
      - 3000:3000
    env_file:
      - ./../.envrc.example

  node:
    build:
      context: ./nodeDocker/
      dockerfile: Dockerfile

  postgres:
    image: postgres
    ports:
      - 5400:5432
    env_file:
      - ./../.envrc.example

  eventstore:
    image: eventstore/eventstore
    ports:
      - 2113:2113
      - 1113:1113
    environment:
      - ext-http-prefixes=http://*:2113/
      - ext-ip="0.0.0.0"
      - log=/data/logs
      - stats-period-sec=3000000
